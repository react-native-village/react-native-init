/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  PayableOverrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type { ProjectTask, ProjectTaskInterface } from "../ProjectTask";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "_short_title",
        type: "string",
      },
      {
        internalType: "string",
        name: "_task_description_link",
        type: "string",
      },
    ],
    stateMutability: "payable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "AssignedTaskCannotBeClosed",
    type: "error",
  },
  {
    inputs: [],
    name: "EmployerCannotBePerformer",
    type: "error",
  },
  {
    inputs: [],
    name: "OnlyEmployerCanDoThis",
    type: "error",
  },
  {
    inputs: [],
    name: "OnlyPerformerCanDoThis",
    type: "error",
  },
  {
    inputs: [],
    name: "PerformerAlreadyWish",
    type: "error",
  },
  {
    inputs: [],
    name: "PerformerIsNotWishingDoThis",
    type: "error",
  },
  {
    inputs: [],
    name: "TaskIsNotInProgress",
    type: "error",
  },
  {
    inputs: [],
    name: "TaskIsStillInProgress",
    type: "error",
  },
  {
    inputs: [],
    name: "TaskNotPendingPerformer",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "performer",
        type: "address",
      },
    ],
    name: "assignPerformer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "assignRequest",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "completeTask",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "employer",
    outputs: [
      {
        internalType: "address payable",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "rejectTask",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "selected_performer",
    outputs: [
      {
        internalType: "address payable",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "sendTaskToReview",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "short_title",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "status",
    outputs: [
      {
        internalType: "enum Status",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "task_cost",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "task_description_link",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "wishing_performers",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040526000600460006101000a81548160ff021916908360058111156200002d576200002c620000ca565b5b0217905550604051620014e3380380620014e383398181016040528101906200005791906200028c565b336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508060029081620000a891906200055c565b508160039081620000ba91906200055c565b5034600181905550505062000643565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b620001628262000117565b810181811067ffffffffffffffff8211171562000184576200018362000128565b5b80604052505050565b600062000199620000f9565b9050620001a7828262000157565b919050565b600067ffffffffffffffff821115620001ca57620001c962000128565b5b620001d58262000117565b9050602081019050919050565b60005b8381101562000202578082015181840152602081019050620001e5565b60008484015250505050565b6000620002256200021f84620001ac565b6200018d565b90508281526020810184848401111562000244576200024362000112565b5b62000251848285620001e2565b509392505050565b600082601f8301126200027157620002706200010d565b5b8151620002838482602086016200020e565b91505092915050565b60008060408385031215620002a657620002a562000103565b5b600083015167ffffffffffffffff811115620002c757620002c662000108565b5b620002d58582860162000259565b925050602083015167ffffffffffffffff811115620002f957620002f862000108565b5b620003078582860162000259565b9150509250929050565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806200036457607f821691505b6020821081036200037a57620003796200031c565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302620003e47fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82620003a5565b620003f08683620003a5565b95508019841693508086168417925050509392505050565b6000819050919050565b6000819050919050565b60006200043d62000437620004318462000408565b62000412565b62000408565b9050919050565b6000819050919050565b62000459836200041c565b62000471620004688262000444565b848454620003b2565b825550505050565b600090565b6200048862000479565b620004958184846200044e565b505050565b5b81811015620004bd57620004b16000826200047e565b6001810190506200049b565b5050565b601f8211156200050c57620004d68162000380565b620004e18462000395565b81016020851015620004f1578190505b62000509620005008562000395565b8301826200049a565b50505b505050565b600082821c905092915050565b6000620005316000198460080262000511565b1980831691505092915050565b60006200054c83836200051e565b9150826002028217905092915050565b620005678262000311565b67ffffffffffffffff81111562000583576200058262000128565b5b6200058f82546200034b565b6200059c828285620004c1565b600060209050601f831160018114620005d45760008415620005bf578287015190505b620005cb85826200053e565b8655506200063b565b601f198416620005e48662000380565b60005b828110156200060e57848901518255600182019150602085019450602081019050620005e7565b868310156200062e57848901516200062a601f8916826200051e565b8355505b6001600288020188555050505b505050505050565b610e9080620006536000396000f3fe608060405234801561001057600080fd5b50600436106100b45760003560e01c806354bf4bc31161007157806354bf4bc31461012f5780639b37e0c314610139578063ae1ee53314610157578063ae200e7914610175578063e7793e3714610193578063f5c743f4146101c3576100b4565b80631ff70522146100b9578063200d2ed2146100c357806333f17420146100e157806343bb8db5146100ff5780634a45110b146101095780634bf576cc14610113575b600080fd5b6100c16101e1565b005b6100cb610302565b6040516100d89190610bf7565b60405180910390f35b6100e9610315565b6040516100f69190610c53565b60405180910390f35b61010761033b565b005b6101116104fd565b005b61012d60048036038101906101289190610cb1565b610660565b005b610137610844565b005b610141610a1a565b60405161014e9190610d6e565b60405180910390f35b61015f610aa8565b60405161016c9190610da9565b60405180910390f35b61017d610aae565b60405161018a9190610c53565b60405180910390f35b6101ad60048036038101906101a89190610cb1565b610ad2565b6040516101ba9190610ddf565b60405180910390f35b6101cb610af2565b6040516101d89190610d6e565b60405180910390f35b600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610268576040517f8ce9aa0b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6001600581111561027c5761027b610b80565b5b600460009054906101000a900460ff16600581111561029e5761029d610b80565b5b146102d5576040517f4b372cd100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6002600460006101000a81548160ff021916908360058111156102fb576102fa610b80565b5b0217905550565b600460009054906101000a900460ff1681565b600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146103c0576040517fb865db7000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600260058111156103d4576103d3610b80565b5b600460009054906101000a900460ff1660058111156103f6576103f5610b80565b5b1461042d576040517fc015b61f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60048060006101000a81548160ff0219169083600581111561045257610451610b80565b5b0217905550600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc6001549081150290604051600060405180830381858888f193505050501580156104c1573d6000803e3d6000fd5b50600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16ff5b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610582576040517fb865db7000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000600581111561059657610595610b80565b5b600460009054906101000a900460ff1660058111156105b8576105b7610b80565b5b146105ef576040517f981d77c100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6003600581111561060357610602610b80565b5b600460009054906101000a900460ff16600581111561062557610624610b80565b5b505060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16ff5b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146106e5576040517fb865db7000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600060058111156106f9576106f8610b80565b5b600460009054906101000a900460ff16600581111561071b5761071a610b80565b5b14610752576040517fe743c7dc00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600560008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff166107d5576040517f1c98f22100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6001600460006101000a81548160ff021916908360058111156107fb576107fa610b80565b5b021790555080600660006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6000600581111561085857610857610b80565b5b600460009054906101000a900460ff16600581111561087a57610879610b80565b5b146108b1576040517fe743c7dc00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1603610936576040517fd9c8693100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60011515600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff161515036109c0576040517f7faa57d400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6001600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550565b60038054610a2790610e29565b80601f0160208091040260200160405190810160405280929190818152602001828054610a5390610e29565b8015610aa05780601f10610a7557610100808354040283529160200191610aa0565b820191906000526020600020905b815481529060010190602001808311610a8357829003601f168201915b505050505081565b60015481565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60056020528060005260406000206000915054906101000a900460ff1681565b60028054610aff90610e29565b80601f0160208091040260200160405190810160405280929190818152602001828054610b2b90610e29565b8015610b785780601f10610b4d57610100808354040283529160200191610b78565b820191906000526020600020905b815481529060010190602001808311610b5b57829003601f168201915b505050505081565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b60068110610bc057610bbf610b80565b5b50565b6000819050610bd182610baf565b919050565b6000610be182610bc3565b9050919050565b610bf181610bd6565b82525050565b6000602082019050610c0c6000830184610be8565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610c3d82610c12565b9050919050565b610c4d81610c32565b82525050565b6000602082019050610c686000830184610c44565b92915050565b600080fd5b6000610c7e82610c12565b9050919050565b610c8e81610c73565b8114610c9957600080fd5b50565b600081359050610cab81610c85565b92915050565b600060208284031215610cc757610cc6610c6e565b5b6000610cd584828501610c9c565b91505092915050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610d18578082015181840152602081019050610cfd565b60008484015250505050565b6000601f19601f8301169050919050565b6000610d4082610cde565b610d4a8185610ce9565b9350610d5a818560208601610cfa565b610d6381610d24565b840191505092915050565b60006020820190508181036000830152610d888184610d35565b905092915050565b6000819050919050565b610da381610d90565b82525050565b6000602082019050610dbe6000830184610d9a565b92915050565b60008115159050919050565b610dd981610dc4565b82525050565b6000602082019050610df46000830184610dd0565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680610e4157607f821691505b602082108103610e5457610e53610dfa565b5b5091905056fea264697066735822122068ee367cb78564288912360e72bb158437931a90e32a8b13e79a4e9e870cf6f964736f6c63430008110033";

type ProjectTaskConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ProjectTaskConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ProjectTask__factory extends ContractFactory {
  constructor(...args: ProjectTaskConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _short_title: PromiseOrValue<string>,
    _task_description_link: PromiseOrValue<string>,
    overrides?: PayableOverrides & { from?: PromiseOrValue<string> }
  ): Promise<ProjectTask> {
    return super.deploy(
      _short_title,
      _task_description_link,
      overrides || {}
    ) as Promise<ProjectTask>;
  }
  override getDeployTransaction(
    _short_title: PromiseOrValue<string>,
    _task_description_link: PromiseOrValue<string>,
    overrides?: PayableOverrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _short_title,
      _task_description_link,
      overrides || {}
    );
  }
  override attach(address: string): ProjectTask {
    return super.attach(address) as ProjectTask;
  }
  override connect(signer: Signer): ProjectTask__factory {
    return super.connect(signer) as ProjectTask__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ProjectTaskInterface {
    return new utils.Interface(_abi) as ProjectTaskInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ProjectTask {
    return new Contract(address, _abi, signerOrProvider) as ProjectTask;
  }
}
